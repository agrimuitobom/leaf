<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>葉の光合成効率推定アプリ</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }


        .main-content {
            padding: 30px;
        }
        
        .upload-section {
            border: 3px dashed #4CAF50;
            border-radius: 15px;
            padding: 40px;
            text-align: center;
            margin-bottom: 30px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .upload-section:hover {
            border-color: #2E7D32;
            background-color: #f8f9fa;
        }
        
        .upload-section.dragover {
            border-color: #2E7D32;
            background-color: #e8f5e8;
        }
        
        .upload-icon {
            font-size: 4em;
            color: #4CAF50;
            margin-bottom: 20px;
        }
        
        .file-input {
            display: none;
        }
        
        .upload-btn {
            background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            font-size: 1.1em;
            cursor: pointer;
            transition: transform 0.2s ease;
        }
        
        .upload-btn:hover {
            transform: translateY(-2px);
        }
        
        .samples-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        
        .sample-card {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.2s ease;
        }
        
        .sample-card:hover {
            transform: translateY(-5px);
        }
        
        .sample-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
            margin-bottom: 15px;
        }
        
        .sample-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .info-item {
            background: white;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
        }
        
        .info-label {
            font-size: 0.9em;
            color: #666;
            margin-bottom: 5px;
        }
        
        .info-value {
            font-size: 1.2em;
            font-weight: bold;
            color: #2E7D32;
        }
        
        .efficiency-bar {
            background: #e0e0e0;
            height: 20px;
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 10px;
        }
        
        .efficiency-fill {
            height: 100%;
            background: linear-gradient(90deg, #ff6b6b 0%, #feca57 50%, #48ca48 100%);
            transition: width 0.5s ease;
            border-radius: 10px;
        }
        
        .remove-btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 15px;
            cursor: pointer;
            font-size: 0.9em;
        }
        
        .comparison-section {
            margin-top: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 15px;
        }
        
        .comparison-title {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #2E7D32;
        }
        
        .tips {
            background: #e3f2fd;
            padding: 20px;
            border-radius: 15px;
            margin-top: 20px;
            border-left: 5px solid #2196F3;
        }
        
        .tips h3 {
            color: #1976D2;
            margin-bottom: 10px;
        }
        
        .tips ul {
            margin-left: 20px;
        }
        
        .tips li {
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🍃 葉の光合成効率推定アプリ</h1>
            <p>葉の色から光合成効率を推定し、比較栽培試験をサポートします</p>
        </div>
        
        <div class="main-content">
            <div class="upload-section" id="uploadSection">
                <div class="upload-icon">📷</div>
                <h3>葉の写真をアップロードしてください</h3>
                <p style="margin: 15px 0; color: #666;">
                    ドラッグ&ドロップまたはクリックして画像を選択
                </p>
                <button class="upload-btn" onclick="document.getElementById('fileInput').click()">
                    画像を選択
                </button>
                <input type="file" id="fileInput" class="file-input" accept="image/*" multiple>
            </div>
            
            <div class="samples-container" id="samplesContainer"></div>
            
            <div class="comparison-section" id="comparisonSection" style="display: none;">
                <h3 class="comparison-title">📊 比較結果</h3>
                <div id="comparisonChart"></div>
            </div>
            
            <div class="tips">
                <h3>🔬 撮影のコツ</h3>
                <ul>
                    <li><strong>均一な照明：</strong> 自然光または均一な人工照明下で撮影</li>
                    <li><strong>背景の統一：</strong> 白い紙やプレートを背景に使用</li>
                    <li><strong>距離の一定化：</strong> カメラと葉の距離を統一</li>
                    <li><strong>葉の選択：</strong> 代表的で健康な葉を選択</li>
                    <li><strong>時間の統一：</strong> 同じ時間帯に撮影（光の条件を統一）</li>
                </ul>
            </div>
        </div>
    </div>

    <script>
        let sampleData = [];
        let sampleCounter = 0;

        // ファイルアップロードの設定
        const fileInput = document.getElementById('fileInput');
        const uploadSection = document.getElementById('uploadSection');
        const samplesContainer = document.getElementById('samplesContainer');
        const comparisonSection = document.getElementById('comparisonSection');

        fileInput.addEventListener('change', handleFiles);
        
        // ドラッグ&ドロップの設定
        uploadSection.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadSection.classList.add('dragover');
        });
        
        uploadSection.addEventListener('dragleave', () => {
            uploadSection.classList.remove('dragover');
        });
        
        uploadSection.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadSection.classList.remove('dragover');
            handleFiles({ target: { files: e.dataTransfer.files } });
        });

        function handleFiles(event) {
            const files = Array.from(event.target.files);
            files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    processImage(file);
                }
            });
        }

        function processImage(file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = new Image();
                img.onload = function() {
                    const analysis = analyzeLeafImage(img);
                    const sample = {
                        id: ++sampleCounter,
                        name: `サンプル ${sampleCounter}`,
                        image: e.target.result,
                        ...analysis
                    };
                    sampleData.push(sample);
                    displaySample(sample);
                    updateComparison();
                };
                img.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }

        function analyzeLeafImage(img) {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0);

            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            const data = imageData.data;

            let totalGreen = 0;
            let totalRed = 0;
            let totalBlue = 0;
            let pixelCount = 0;
            let greenPixels = 0;

            // 画像の中央部分を解析（背景の影響を減らすため）
            const startX = Math.floor(canvas.width * 0.2);
            const endX = Math.floor(canvas.width * 0.8);
            const startY = Math.floor(canvas.height * 0.2);
            const endY = Math.floor(canvas.height * 0.8);

            for (let y = startY; y < endY; y++) {
                for (let x = startX; x < endX; x++) {
                    const index = (y * canvas.width + x) * 4;
                    const r = data[index];
                    const g = data[index + 1];
                    const b = data[index + 2];

                    // 緑色の画素を判定（緑が最も強い色）
                    if (g > r && g > b && g > 50) {
                        totalRed += r;
                        totalGreen += g;
                        totalBlue += b;
                        greenPixels++;
                    }
                    pixelCount++;
                }
            }

            if (greenPixels === 0) {
                return {
                    chlorophyllIndex: 0,
                    photosynthesisEfficiency: 0,
                    greenIntensity: 0,
                    leafHealthScore: 0
                };
            }

            const avgRed = totalRed / greenPixels;
            const avgGreen = totalGreen / greenPixels;
            const avgBlue = totalBlue / greenPixels;

            // クロロフィル指数の計算（緑色の強度と赤/青との比率）
            const chlorophyllIndex = Math.min(100, (avgGreen / (avgRed + avgBlue + 1)) * 50);
            
            // 緑色の強度
            const greenIntensity = Math.min(100, (avgGreen / 255) * 100);
            
            // 光合成効率の推定（クロロフィル指数と緑色強度の組み合わせ）
            const photosynthesisEfficiency = Math.min(100, (chlorophyllIndex * 0.6 + greenIntensity * 0.4));
            
            // 葉の健康度スコア
            const leafHealthScore = Math.min(100, photosynthesisEfficiency * 0.8 + (greenPixels / pixelCount) * 200);

            return {
                chlorophyllIndex: Math.round(chlorophyllIndex),
                photosynthesisEfficiency: Math.round(photosynthesisEfficiency),
                greenIntensity: Math.round(greenIntensity),
                leafHealthScore: Math.round(leafHealthScore)
            };
        }

        function displaySample(sample) {
            const card = document.createElement('div');
            card.className = 'sample-card';
            card.innerHTML = `
                <img src="${sample.image}" alt="${sample.name}" class="sample-image">
                <h4 style="margin-bottom: 15px; color: #2E7D32;">${sample.name}</h4>
                <div class="sample-info">
                    <div class="info-item">
                        <div class="info-label">クロロフィル指数</div>
                        <div class="info-value">${sample.chlorophyllIndex}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">緑色強度</div>
                        <div class="info-value">${sample.greenIntensity}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">健康度スコア</div>
                        <div class="info-value">${sample.leafHealthScore}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">推定光合成効率</div>
                        <div class="info-value">${sample.photosynthesisEfficiency}%</div>
                    </div>
                </div>
                <div class="efficiency-bar">
                    <div class="efficiency-fill" style="width: ${sample.photosynthesisEfficiency}%"></div>
                </div>
                <button class="remove-btn" onclick="removeSample(${sample.id})">削除</button>
            `;
            samplesContainer.appendChild(card);
        }

        function removeSample(id) {
            sampleData = sampleData.filter(sample => sample.id !== id);
            updateDisplay();
        }

        function updateDisplay() {
            samplesContainer.innerHTML = '';
            sampleData.forEach(sample => displaySample(sample));
            updateComparison();
        }

        function updateComparison() {
            if (sampleData.length < 2) {
                comparisonSection.style.display = 'none';
                return;
            }

            comparisonSection.style.display = 'block';
            
            // 最高と最低の効率を計算
            const efficiencies = sampleData.map(s => s.photosynthesisEfficiency);
            const maxEfficiency = Math.max(...efficiencies);
            const minEfficiency = Math.min(...efficiencies);
            const avgEfficiency = efficiencies.reduce((a, b) => a + b, 0) / efficiencies.length;

            // ソートされたサンプルリストを作成
            const sortedSamples = [...sampleData].sort((a, b) => b.photosynthesisEfficiency - a.photosynthesisEfficiency);

            const comparisonHTML = `
                <div style="background: white; padding: 20px; border-radius: 10px; margin-bottom: 20px;">
                    <h4>📈 統計サマリー</h4>
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin-top: 15px;">
                        <div style="text-align: center; padding: 15px; background: #f0f8ff; border-radius: 8px;">
                            <div style="color: #666; font-size: 0.9em;">最高効率</div>
                            <div style="color: #4CAF50; font-size: 1.5em; font-weight: bold;">${maxEfficiency}%</div>
                        </div>
                        <div style="text-align: center; padding: 15px; background: #fff5f5; border-radius: 8px;">
                            <div style="color: #666; font-size: 0.9em;">最低効率</div>
                            <div style="color: #f44336; font-size: 1.5em; font-weight: bold;">${minEfficiency}%</div>
                        </div>
                        <div style="text-align: center; padding: 15px; background: #f9f9f9; border-radius: 8px;">
                            <div style="color: #666; font-size: 0.9em;">平均効率</div>
                            <div style="color: #2196F3; font-size: 1.5em; font-weight: bold;">${Math.round(avgEfficiency)}%</div>
                        </div>
                        <div style="text-align: center; padding: 15px; background: #f0f8f0; border-radius: 8px;">
                            <div style="color: #666; font-size: 0.9em;">効率差</div>
                            <div style="color: #FF9800; font-size: 1.5em; font-weight: bold;">${maxEfficiency - minEfficiency}%</div>
                        </div>
                    </div>
                </div>
                
                <div style="background: white; padding: 20px; border-radius: 10px;">
                    <h4>🏆 ランキング</h4>
                    <div style="margin-top: 15px;">
                        ${sortedSamples.map((sample, index) => `
                            <div style="display: flex; align-items: center; padding: 10px; margin-bottom: 10px; background: ${index === 0 ? '#e8f5e8' : '#f9f9f9'}; border-radius: 8px; border-left: 4px solid ${index === 0 ? '#4CAF50' : '#ddd'};">
                                <div style="margin-right: 15px; font-weight: bold; color: ${index === 0 ? '#4CAF50' : '#666'};">
                                    ${index + 1}位
                                </div>
                                <div style="flex-grow: 1;">
                                    <div style="font-weight: bold;">${sample.name}</div>
                                    <div style="font-size: 0.9em; color: #666;">クロロフィル指数: ${sample.chlorophyllIndex} | 健康度: ${sample.leafHealthScore}</div>
                                </div>
                                <div style="text-align: right;">
                                    <div style="font-size: 1.2em; font-weight: bold; color: ${index === 0 ? '#4CAF50' : '#333'};">
                                        ${sample.photosynthesisEfficiency}%
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;

            document.getElementById('comparisonChart').innerHTML = comparisonHTML;
        }
    </script>
</body>
</html>
